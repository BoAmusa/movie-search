{"version":3,"sources":["reportWebVitals.js","Components/Movie.js","Components/MovieList.js","Components/SearchBox.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Movie","title","image","className","class","src","alt","MovieList","movies","classname","map","results","i","id","SearchBox","props","onSubmit","event","type","placeholder","onChange","target","value","SEARCH_API","process","FAV_MOVIE","App","useState","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","a","fetch","response","json","responseJson","handleOnChange","preventDefault","undefined","length","ReactDOM","render","document","getElementById"],"mappings":"gLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,6CCICQ,EATD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACZ,sBAAKC,UAAU,WAAf,UACE,qBAAKC,MAAM,cAAcC,IAAKH,EAAOI,IAAKL,IAC1C,qBAAKE,UAAU,gBAAf,SACE,6BAAKF,UCcIM,EAjBG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,qBAAKC,UAAU,mBAAf,SACGD,EAAOE,KAAI,SAACC,EAASC,GACpB,OACE,cAAC,EAAD,CAEEC,GAAIL,EAAOI,GAAGC,GACdX,MAAOM,EAAOI,GAAGV,MACjBD,MAAOO,EAAOI,GAAGX,OAHZW,SCQFE,EAfG,SAACC,GACjB,OACE,qBAAKZ,UAAU,qCAAf,SACE,sBAAMa,SAAU,SAAAC,GAAK,OAAIF,EAAMC,SAASC,IAAxC,SACA,uBACEd,UAAU,yCACVe,KAAK,SACLC,YAAY,gBACZC,SAAU,SAAAH,GAAK,OAAIF,EAAMK,SAASH,EAAMI,OAAOC,eCLjDC,EAAU,kDADAC,aACA,KACVC,EAAY,WAwDHC,EAtDH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTnB,EADS,KACDoB,EADC,OAEoBD,mBAAS,IAF7B,mBAETE,EAFS,KAEGC,EAFH,KAIhBC,qBAAU,WACRC,EAAUT,EAAaE,KACtB,CAACA,IAGJ,IAAMO,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAChBN,EAAU,IADM,SAEOO,MAAMF,GAFb,cAEVG,EAFU,gBAGWA,EAASC,OAHpB,OAGVC,EAHU,OAIhBV,EAAUU,EAAa3B,SAJP,2CAAH,sDAsBf,OACE,gCACE,sBAAKR,UAAU,KAAf,UACE,oBAAIA,UAAU,uCAAd,0BACA,cAAC,EAAD,CACEA,UAAU,uCACViB,SAAU,SAACE,GAAD,OAXK,SAACA,GACtBQ,EAAcR,GACdU,EAAUT,EAAaD,GASIiB,CAAejB,IACpCN,SAAU,SAACC,GAAD,OAA0BA,EApBxCuB,sBACEX,IACFG,EAAUT,EAAaM,GACvBC,EAAc,YAoBd,qBAAK3B,UAAU,UAAf,SACE,mCACcsC,IAAXjC,GAAmC,OAAXA,GAAmBA,EAAOkC,OAAS,EAC1D,cAAC,EAAD,CAAWlC,OAAQA,IAEnB,oBAAIL,UAAU,kCAAd,gCC/CZwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDvD,M","file":"static/js/main.0698edee.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import react from \"react\";\n\nconst Movie = ({ title, image }) => (\n  <div className=\"grow dib\">\n    <img class=\"card__image\" src={image} alt={title} />\n    <div className=\"card__content\">\n      <h3>{title}</h3>\n    </div>\n  </div>\n);\n\nexport default Movie;\n","import React from \"react\";\nimport Movie from \"./Movie\";\n\nconst MovieList = ({ movies }) => {\n  return (\n    <div classname=\"tc v-mid wrapper\">\n      {movies.map((results, i) => {\n        return (\n          <Movie\n            key={i}\n            id={movies[i].id}\n            image={movies[i].image}\n            title={movies[i].title}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import React from \"react\";\n\nconst SearchBox = (props) => {\n  return (\n    <div className=\"mv4 w-100 w-50-m w-25-l mw6 center\">\n      <form onSubmit={event => props.onSubmit(event)}>\n      <input\n        className=\"pa3 ba b--green bg-lightst-blue center\"\n        type=\"search\"\n        placeholder=\"search movies\"\n        onChange={event => props.onChange(event.target.value)}\n      />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { useEffect, useState } from \"react\";\nimport MovieList from \"../Components/MovieList\";\nimport SearchBox from \"../Components/SearchBox\";\n\nconst API_KEY = process.env.REACT_APP_IMDB_API_KEY;\nconst SEARCH_API = `https://imdb-api.com/en/API/SearchMovie/${API_KEY}/`;\nconst FAV_MOVIE = \"Avengers\";\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    getMovies(SEARCH_API + FAV_MOVIE);\n  }, [FAV_MOVIE]);\n\n  //API to retrieves movies via IMdB\n  const getMovies = async (API) => {\n    setMovies(\"\");\n    const response = await fetch(API);\n    const responseJson = await response.json();\n    setMovies(responseJson.results);\n  };\n\n  //Executes search on enter key\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    if (searchTerm) {\n      getMovies(SEARCH_API + searchTerm);\n      setSearchTerm(\"\");\n    }\n  };\n\n  //Builds up search query from search bar\n  const handleOnChange = (value) => {\n    setSearchTerm(value);\n    getMovies(SEARCH_API + value);\n  };\n\n  return (\n    <div>\n      <div className=\"tc\">\n        <h1 className=\"tc mv3 w-50 w-50-m w-50-l mw5 center\">Movie Search</h1>\n        <SearchBox\n          className=\"tc mv3 w-50 w-50-m w-25-l mw5 center\"\n          onChange={(value) => handleOnChange(value)}\n          onSubmit={(event) => handleOnSubmit(event)}\n        />\n      </div>\n      <div className=\"wrapper\">\n        <div>\n          {movies !== undefined && movies !== null && movies.length > 0 ? (\n            <MovieList movies={movies} />\n          ) : (\n            <h1 className=\"mv2 w-20 w-20-m w-25-l mw5 left\">LOADING...</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\nimport App from \"./Containers/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}